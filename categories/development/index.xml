<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Development on Thai Ho</title>
    <link>https://hpthai7.github.io/categories/development/</link>
    <description>Recent content in Development on Thai Ho</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Fri, 01 May 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://hpthai7.github.io/categories/development/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Git Cheat Sheets, Tips and Tricks</title>
      <link>https://hpthai7.github.io/2020/git-cheat-sheet/</link>
      <pubDate>Fri, 01 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://hpthai7.github.io/2020/git-cheat-sheet/</guid>
      <description>GitLab Gitlab CI-CD Pay attention that the correct file for gitlab ci-cd pipeline .gitlab-ci.yml ends with .yml, not .yaml.
Choose which executor for gitlab runner? Increase concurrent jobs Jobs are executed by Runners. Multiple jobs in the same stage are executed in parallel, if there are enough concurrent runners.
The limit of concurrent jobs are tunable in config.toml.
Job image vs docker executor In the definition of jobs, the image keyword is the name of the Docker image the Docker executor will run to perform the CI tasks.</description>
    </item>
    
    <item>
      <title>Overview of different Git Flows for management of software projects</title>
      <link>https://hpthai7.github.io/2020/git-flows-overview/</link>
      <pubDate>Thu, 23 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://hpthai7.github.io/2020/git-flows-overview/</guid>
      <description>This article covers the different git flows tailored for software projects in professional environment. Each flow is adapted to the context of project scale, the number of developers and the expected delivery cycles. Here we feature Git Flow, Github Flow, Gitlab Flow
Git Flow Github Flow Gitlab Flow Refence  Gitlab tutorial Stackoverflow Semantic release   </description>
    </item>
    
    <item>
      <title>(Hu)go Template Primer</title>
      <link>https://hpthai7.github.io/2014/goisforlovers/</link>
      <pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://hpthai7.github.io/2014/goisforlovers/</guid>
      <description>Hugo uses the excellent Go html/template library for its template engine. It is an extremely lightweight engine that provides a very small amount of logic. In our experience that it is just the right amount of logic to be able to create a good static website. If you have used other template systems from different languages or frameworks you will find a lot of similarities in Go templates.
This document is a brief primer on using Go templates.</description>
    </item>
    
    <item>
      <title>Getting Started with Hugo</title>
      <link>https://hpthai7.github.io/2014/hugo-is-for-lovers/</link>
      <pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://hpthai7.github.io/2014/hugo-is-for-lovers/</guid>
      <description>Step 1. Install Hugo Go to Hugo releases and download the appropriate version for your OS and architecture.
Save it somewhere specific as we will be using it in the next step.
More complete instructions are available at Install Hugo
In Windows The handy way favors chocolatey. For the theme KeepIt, it&amp;rsquo;s recommended to install the extended version of hugo with SCSS/SASS support. It allows better rendering of the website thanks to the generation of CSS in resources directory from SCSS/SASS styles.</description>
    </item>
    
  </channel>
</rss>