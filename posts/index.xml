<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Thai Ho</title>
    <link>https://hpthai7.github.io/posts/</link>
    <description>Recent content in Posts on Thai Ho</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 23 Apr 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://hpthai7.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Overview of different Git Flows for management of software projects</title>
      <link>https://hpthai7.github.io/2020/git-flows-overview/</link>
      <pubDate>Thu, 23 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://hpthai7.github.io/2020/git-flows-overview/</guid>
      <description>This article covers the different git flows tailored for software projects in professional environment. Each flow is adapted to the context of project scale, the number of developers and the expected delivery cycles. Here we feature Git Flow, Github Flow, Gitlab Flow
Git Flow Github Flow Gitlab Flow Refence  Gitlab tutorial Stackoverflow Semantic release   </description>
    </item>
    
    <item>
      <title>Docker in development and deployment</title>
      <link>https://hpthai7.github.io/2020/docker-in-development-and-deployment/</link>
      <pubDate>Mon, 13 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://hpthai7.github.io/2020/docker-in-development-and-deployment/</guid>
      <description>Semantic versioning The versioning of docker images, as per Docker Hub, does not respect the rules of semantic versioning. A single image can share different tags as demonstrated in the photo. The tags feature a Major release, a Major.minor release, and a Major.minor.patch release.</description>
    </item>
    
    <item>
      <title>Tips for development and deployment with Kubernetes</title>
      <link>https://hpthai7.github.io/2020/kubernetes-tips/</link>
      <pubDate>Mon, 13 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://hpthai7.github.io/2020/kubernetes-tips/</guid>
      <description>What is Kubernetes Kubernetes is a sophisticated tool for the orchestration of containers in mass deployment. It provides an effective ways to define the software components, resources and deploy them in a controllable and effective manner. The strongest points of Kubernetes is:
  The abstraction of infrastructure layer to deployment layer. This allows developers and administrators concentrate on the development stage and less worry about the management of the underlying hardware settings.</description>
    </item>
    
    <item>
      <title>Install a multi-window Linux-like terminal on Windows</title>
      <link>https://hpthai7.github.io/2020/conemu-git-bash-on-windows/</link>
      <pubDate>Sat, 11 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://hpthai7.github.io/2020/conemu-git-bash-on-windows/</guid>
      <description>The frustration of having a Linux-like terminal with bash environment for development purpose has been lingering for a while. There are currently many terminal softwares such as HyperTerminal, ConEmu, Cmder, Cygwin and console application such as git bash, WSL, msys, powershell.
As a fan of terminator, bash, and oh-my-zsh stack in Linux, I had problems switching to Windows. For Windows, WSL provide a real Linux bash environment, however, its integration with oh-my-zsh library has some font and background problems.</description>
    </item>
    
    <item>
      <title>Markdown checkout</title>
      <link>https://hpthai7.github.io/2020/markdown/</link>
      <pubDate>Tue, 10 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://hpthai7.github.io/2020/markdown/</guid>
      <description>1. Intro 1.1. Code highlighting function readArgs(args) { for (const var in args) { console.log(`args[${var}] = ${args[var]}`) } } class Test(object): def __init__(): pass def foo(): if not bar: return True ls -al </description>
    </item>
    
    <item>
      <title>Creating a New Theme</title>
      <link>https://hpthai7.github.io/2014/creating-a-new-theme/</link>
      <pubDate>Sun, 28 Sep 2014 00:00:00 +0000</pubDate>
      
      <guid>https://hpthai7.github.io/2014/creating-a-new-theme/</guid>
      <description>Introduction This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I&amp;rsquo;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won&amp;rsquo;t cover using CSS to style your theme.
We&amp;rsquo;ll start with creating a new site with a very basic template.</description>
    </item>
    
    <item>
      <title>Migrate to Hugo from Jekyll</title>
      <link>https://hpthai7.github.io/2014/migrate-from-jekyll/</link>
      <pubDate>Mon, 10 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>https://hpthai7.github.io/2014/migrate-from-jekyll/</guid>
      <description>Move static content to static Jekyll has a rule that any directory not starting with _ will be copied as-is to the _site output. Hugo keeps all static content under static. You should therefore move it all there. With Jekyll, something that looked like
▾ &amp;lt;root&amp;gt;/ ▾ images/ logo.png  should become
▾ &amp;lt;root&amp;gt;/ ▾ static/ ▾ images/ logo.png  Additionally, you&amp;rsquo;ll want any files that should reside at the root (such as CNAME) to be moved to static.</description>
    </item>
    
    <item>
      <title>Shortcode Tests</title>
      <link>https://hpthai7.github.io/2016/shortcode-tests/</link>
      <pubDate>Thu, 29 Dec 2016 13:39:24 -0500</pubDate>
      
      <guid>https://hpthai7.github.io/2016/shortcode-tests/</guid>
      <description>Hello, Thanks for downloading and testing our my shortcode pack. Below will load all of the shortcodes and display the various options they have. If you like and enjoy these short codes, please post a link on your blog to GeekThis.net, I would really appreciate it.
Installing New Shortcodes To install shortcodes, copy each HTML file relating to a shortcode you want and place it into the shortcode directory inside of Hugo.</description>
    </item>
    
    <item>
      <title>(Hu)go Template Primer</title>
      <link>https://hpthai7.github.io/2014/goisforlovers/</link>
      <pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://hpthai7.github.io/2014/goisforlovers/</guid>
      <description>Hugo uses the excellent Go html/template library for its template engine. It is an extremely lightweight engine that provides a very small amount of logic. In our experience that it is just the right amount of logic to be able to create a good static website. If you have used other template systems from different languages or frameworks you will find a lot of similarities in Go templates.
This document is a brief primer on using Go templates.</description>
    </item>
    
    <item>
      <title>Getting Started with Hugo</title>
      <link>https://hpthai7.github.io/2014/hugo-is-for-lovers/</link>
      <pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://hpthai7.github.io/2014/hugo-is-for-lovers/</guid>
      <description>Step 1. Install Hugo Go to Hugo releases and download the appropriate version for your OS and architecture.
Save it somewhere specific as we will be using it in the next step.
More complete instructions are available at Install Hugo
In Windows The handy way favors chocolatey. For the theme KeepIt, it&amp;rsquo;s recommended to install the extended version of hugo with SCSS/SASS support. It allows better rendering of the website thanks to the generation of CSS in resources directory from SCSS/SASS styles.</description>
    </item>
    
    <item>
      <title>Introduction aux modèles (Hu)go</title>
      <link>https://hpthai7.github.io/2014/goisforlovers.fr/</link>
      <pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://hpthai7.github.io/2014/goisforlovers.fr/</guid>
      <description>Hugo utilise l&amp;rsquo;excellente librairie go html/template pour son moteur de modèles. c&amp;rsquo;est un moteur extrêmement léger qui offre un très petit nombre de fonctions logiques. À notre expérience, c&amp;rsquo;est juste ce qu&amp;rsquo;il faut pour créer un bon site web statique. Si vous avez déjà utilisé d&amp;rsquo;autre moteurs de modèles pour différents langages ou frameworks, vous allez retrouver beaucoup de similitudes avec les modèles go.
Ce document est une introduction sur l&amp;rsquo;utilisation de Go templates.</description>
    </item>
    
  </channel>
</rss>